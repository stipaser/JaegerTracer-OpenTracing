# This is a basic workflow to help you get started with Actions
name: test-actions

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
     - github-actions
    tags:
     - jtot-v*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:    
    runs-on: windows-latest
    
    env:
      SQLPACKAGE_PATH: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\130\sqlpackage"'
    
    #  "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\Extensions\\Microsoft\\SQLDB\\DAC\\130\\sqlpackage\""
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:   
    - uses: actions/checkout@v2      
    
    #- name: install MSBuild 2017
    #  run: choco install visualstudio2017buildtools
    #- name: dispaly BuildTools 2017
    #  run: dir 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools'  
    
    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1
    
    - name: Restore NuGet Packages
      run: nuget restore OpenTracingProj.sln   
    
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Build and Publish Project
      run: msbuild OpenTracingProj.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile
    
    #- name: setup-sqlpackage path
    #  run:  $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\150"
    # C:\Program Files\Docker
    
    #- name: display sqlpackage
    #  run: dir 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\'
       
    #- name: display current dir
    #  run: dir       
    
    #- name: echo env path
    #  run: echo $env:path  
         
    #- name: Setup SQLServer
    #  run: |
    #    sqllocaldb start MSSQLLocalDB
    #    sqllocaldb info MSSQLLocalDB
        
    #- name: try publish dacpac
    #  run: ${{ env.SQLPACKAGE_PATH }} /Action:Publish /SourceFile:ProScheduler.dacpac /TargetConnectionString:"Data Source=(LocalDb)\MSSQLLocalDB;Initial Catalog=ProScheduler;Integrated Security=true;"
    #  shell: cmd

    #- name: Setup Nunit console
    #  run: choco install nunit-console-runner
    
    #- name: try run command test
    #  run: nunit3-console.exe myfile.dll
        
       
    #- name: MSSQLLocalDB info
    #  run: sqllocaldb info MSSQLLocalDB        
    #--------------------------------------------- Docker
    #- name: switch docker
    #  run: |
    #     dir 'C:\Program Files\Docker\Docker\D*Cli.exe'         
         
    #- name: docker run
    #  run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=45setkbv3!@Dw' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest

    #- name: docker ps
    #  run: docker ps
    #-----------------------------------------------------
             
    #- name: GITHUB_WORKSPACE
    #  run: echo $Env:GITHUB_WORKSPACE
    
    #- name: Setup Nuget.exe
    #  uses: warrenbuckley/Setup-Nuget@v1
      
    #- name: Restore NuGet Packages
    #  run: nuget restore OpenTracingProj.sln
    
    #- name: Build and Publish Project
    #  run: msbuild OpenTracingProj.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile
          
    #- name: Display content directory
    #  run: dir 
    
    #- name: Upload artifact
    #  uses: actions/upload-artifact@v1.0.0
    #  with:        
    #    name: published_app        
    #    path: OpenTracingProj\bin\Release
  
